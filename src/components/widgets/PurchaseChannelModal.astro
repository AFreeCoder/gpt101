---
import { siteConfig } from '~/config/site';

const channels = siteConfig.homepage.purchaseChannels;
---

<!-- 购买渠道选择弹窗 -->
<div id="purchase-channel-modal" class="hidden fixed inset-0 z-50 overflow-y-auto">
  <!-- 遮罩层 -->
  <div id="modal-backdrop" class="fixed inset-0 bg-black bg-opacity-50 transition-opacity" aria-hidden="true"></div>

  <!-- 弹窗容器 -->
  <div class="flex min-h-full items-center justify-center p-4">
    <div
      class="relative bg-white rounded-2xl shadow-2xl max-w-md w-full mx-auto transform transition-all"
      role="dialog"
      aria-modal="true"
      aria-labelledby="modal-title"
    >
      <!-- 标题栏 -->
      <div class="flex items-center justify-between px-6 py-4 border-b border-gray-200">
        <h3 id="modal-title" class="text-xl font-bold text-gray-900">请选择购买商品名称（渠道）</h3>
        <button
          id="close-modal-btn"
          type="button"
          class="text-gray-400 hover:text-gray-600 transition-colors"
          aria-label="关闭弹窗"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <!-- 渠道按钮列表 -->
      <div class="px-6 py-6 space-y-3">
        {
          channels.map((channel) => (
            <button
              type="button"
              class={`w-full py-4 px-6 rounded-xl font-semibold text-white bg-gradient-to-r ${channel.color} hover:shadow-lg transform hover:scale-[1.02] transition-all duration-300`}
              data-channel-id={channel.id}
              data-channel-url={channel.url}
              data-channel-description={channel.description || ''}
            >
              {channel.label}
            </button>
          ))
        }
      </div>
    </div>
  </div>
</div>

<!-- 文字提示弹窗 -->
<div id="channel-info-modal" class="hidden fixed inset-0 z-[60] overflow-y-auto">
  <!-- 遮罩层 -->
  <div id="info-modal-backdrop" class="fixed inset-0 bg-black bg-opacity-50 transition-opacity" aria-hidden="true">
  </div>

  <!-- 提示框容器 -->
  <div class="flex min-h-full items-center justify-center p-4">
    <div
      class="relative bg-white rounded-2xl shadow-2xl max-w-sm w-full mx-auto transform transition-all"
      role="dialog"
      aria-modal="true"
    >
      <!-- 内容区 -->
      <div class="px-6 py-6 text-center">
        <!-- 信息图标 -->
        <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 mb-4">
          <svg class="h-6 w-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>

        <!-- 文字说明 -->
        <p id="channel-info-text" class="text-gray-700 whitespace-pre-line mb-6 leading-relaxed">
          <!-- 动态内容 -->
        </p>

        <!-- 确认按钮 -->
        <button
          id="close-info-modal-btn"
          type="button"
          class="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300 shadow-md hover:shadow-lg"
        >
          我知道了
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  function initPurchaseChannelModal() {
    const modal = document.getElementById('purchase-channel-modal');
    const infoModal = document.getElementById('channel-info-modal');
    const backdrop = document.getElementById('modal-backdrop');
    const infoBackdrop = document.getElementById('info-modal-backdrop');
    const closeBtn = document.getElementById('close-modal-btn');
    const closeInfoBtn = document.getElementById('close-info-modal-btn');
    const infoText = document.getElementById('channel-info-text');

    if (!modal || !infoModal || !backdrop || !infoBackdrop || !closeBtn || !closeInfoBtn || !infoText) {
      return;
    }

    // 打开主弹窗
    const openModal = () => {
      modal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    };

    // 关闭主弹窗
    const closeModal = () => {
      modal.classList.add('hidden');
      document.body.style.overflow = '';
    };

    // 打开信息弹窗
    const openInfoModal = (description: string) => {
      infoText.textContent = description;
      infoModal.classList.remove('hidden');
    };

    // 关闭信息弹窗
    const closeInfoModal = () => {
      infoModal.classList.add('hidden');
    };

    // 监听"立即升级"按钮点击
    const upgradeBtn = document.querySelector('[data-open-channel-modal]');
    if (upgradeBtn) {
      upgradeBtn.addEventListener('click', (e) => {
        e.preventDefault();
        openModal();
      });
    }

    // 监听渠道按钮点击
    const channelBtns = modal.querySelectorAll('[data-channel-id]');
    channelBtns.forEach((btn) => {
      btn.addEventListener('click', () => {
        const url = btn.getAttribute('data-channel-url');
        const description = btn.getAttribute('data-channel-description');

        if (url && url.trim() !== '') {
          // 有 URL，打开新标签页
          window.open(url, '_blank');
          closeModal();
        } else if (description && description.trim() !== '') {
          // 无 URL 但有描述，显示信息弹窗
          openInfoModal(description);
        }
      });
    });

    // 关闭按钮事件
    closeBtn.addEventListener('click', closeModal);
    backdrop.addEventListener('click', closeModal);
    closeInfoBtn.addEventListener('click', () => {
      closeInfoModal();
      closeModal();
    });
    infoBackdrop.addEventListener('click', () => {
      closeInfoModal();
      closeModal();
    });

    // ESC 键关闭
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        if (!infoModal.classList.contains('hidden')) {
          closeInfoModal();
          closeModal();
        } else if (!modal.classList.contains('hidden')) {
          closeModal();
        }
      }
    });
  }

  // 页面加载时初始化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initPurchaseChannelModal);
  } else {
    initPurchaseChannelModal();
  }

  // Astro 页面切换时重新初始化
  document.addEventListener('astro:page-load', initPurchaseChannelModal);
</script>
